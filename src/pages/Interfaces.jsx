import React from 'react';
import './pages.css';

function Interfaces() {
  return (
    <>
      <h2>游꿛 Dise침o de Interfaces (UI) Eficientes</h2>
      <p>
        Un buen dise침o de UI no solo hace que la aplicaci칩n sea atractiva, sino que mejora la usabilidad y la experiencia del usuario. A continuaci칩n, exploramos algunos de los principios clave.
      </p>

      <h3 className="titulo-usabilidad"> Botones y Tama침o T치ctil Recomendado</h3>
      <p>
        Los botones son elementos clave en la interacci칩n. Deben ser lo suficientemente grandes para ser pulsados con facilidad en dispositivos t치ctiles.
      </p>
      <ul>
        <li> El tama침o m칤nimo recomendado para un bot칩n es de <b className="code">48x48 p칤xeles</b> (WCAG recomienda un 치rea t치ctil de al menos 9mm).</li>
        <li> Espaciado m칤nimo entre botones: <b className="code">8px</b> para evitar toques accidentales.</li>
        <li> Los botones principales deben ser m치s grandes y llamativos que los secundarios.</li>
        <li> Usa colores contrastantes y etiquetas claras en los botones.</li>
      </ul>
      <p>
        <b>Ejemplo correcto:</b> Un bot칩n grande y bien diferenciado con una etiqueta clara.
      </p>
      <pre className="code">
        {`<button style={{
          padding: '12px 24px',
          fontSize: '16px',
          borderRadius: '8px',
          backgroundColor: '#007bff',
          color: '#fff'
        }}>
          Comprar ahora
        </button>`}
      </pre>

      <h3 className="titulo-usabilidad"> Espaciado y Alineaci칩n</h3>
      <p>
        Un buen uso del espaciado y la alineaci칩n mejora la legibilidad y la navegaci칩n en la interfaz.
      </p>
      <ul>
        <li> Mant칠n una distancia m칤nima de <b className="code">8px</b> entre elementos relacionados.</li>
        <li> Usa <b className="code">alineaci칩n consistente</b> (alineaci칩n a la izquierda o centrada).</li>
        <li> Utiliza un <b className="code">espaciado uniforme</b> en los m치rgenes y paddings.</li>
        <li> Separa visualmente los elementos con espacios en lugar de l칤neas.</li>
      </ul>
      <p>
        <b>Ejemplo correcto:</b> Uso de `gap` en CSS para espaciar elementos dentro de un contenedor.
      </p>
      <pre className="code">
        {`.container {
          display: flex;
          flex-direction: column;
          gap: 12px;
        }`}
      </pre>

      <h3 className="titulo-usabilidad"> Animaciones y Retroalimentaci칩n Visual</h3>
      <p>
        Las animaciones sutiles y la retroalimentaci칩n visual mejoran la percepci칩n de la interfaz y hacen que la experiencia sea m치s fluida.
      </p>
      <ul>
        <li> Usa animaciones para indicar cambios de estado (<b className="code">hover, focus, loading</b>).</li>
        <li> Proporciona retroalimentaci칩n visual cuando un usuario interact칰a con un bot칩n.</li>
        <li> Evita animaciones excesivas que puedan distraer o ralentizar la UI.</li>
      </ul>
      <p>
        <b>Ejemplo correcto:</b> Un bot칩n con efecto de animaci칩n al pasar el mouse (<b className="code">hoover</b>).
      </p>
      <pre className="code">
        {`button {
          transition: background-color 0.3s ease;
        }

        button:hover {
          background-color: #0056b3;
        }`}
      </pre>

      <p>
        Implementar estas pr치cticas garantizar치 una interfaz visualmente atractiva, accesible y eficiente para los usuarios.
      </p>
    </>
  );
}

export default Interfaces;